setwd("~/Documents/UT MSBA 2020-21/Summer /PredictiveModeling/Part2_Exercices/STA380Exercises/exercise1")
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:10], pch = 19, lower.panel = NULL)
# Rent Comparison
mean(nonGreenBuildings_Ideal$Rent) - mean(greenBuildings_Ideal$Rent)
nonGreenBuildings_Ideal <- greenData %>% filter(green_rating != 1,
stories <= 20,
stories >= 10,
age >= 0,
age <= 10,
amenities==1,
cd_total_07>=966)
library(magrittr)
greenData <- read.csv('greenbuildings.csv')
# Subset into just green buildings (Green Buildings: Rent)
greenBuildings <- greenData %>% filter(green_rating == 1)
library(mosaic)
library(dplyr)
library(ggplot2)
library(magrittr)
greenData <- read.csv('greenbuildings.csv')
# Subset into just green buildings (Green Buildings: Rent)
greenBuildings <- greenData %>% filter(green_rating == 1)
# Subset Green Buildings, ~15 stories (+-5 stories), new (built within last 5 years)
greenBuildings_Ideal <- greenData %>% filter(green_rating == 1,
stories <= 20,
stories >= 10,
age >= 0,
age <= 10,
amenities==1,
cd_total_07>=966)
nonGreenBuildings_Ideal <- greenData %>% filter(green_rating != 1,
stories <= 20,
stories >= 10,
age >= 0,
age <= 10,
amenities==1,
cd_total_07>=966)
# Histogram (Green Buildings: Rent)-------------------------------DONE
hist(greenBuildings$Rent, 25, xlab = 'Rent Per Square Foot', main = 'Histogram of Rent Prices')
#density plot of one df (parameter 1) with mean line -------------------------------DONE
#Parameter 1: dataframe to use Ex: green_only
#Parameter 2: title of the grpah as a string Ex: "Title"
#add mean line from entire dataset
rent.denplot <- function(df,TITLE,SUBTITLE){
attach(df)
mean.column = mean(df$Rent)
mean.data = mean(greenData$Rent)
graph = df %>%
ggplot(aes(x=Rent))+
geom_density(fill="darkgreen",alpha=0.5)+
scale_x_log10()+
geom_vline(xintercept = mean.column,size=1,color="darkgreen")+
geom_vline(xintercept = mean.data,size=1,color="black")+
labs(y="Density", title = TITLE, subtitle = "Mean rent of the average building is 28.41", caption = SUBTITLE)+
geom_text(aes(x=mean.column-1, label="Subset", y=1.5), colour="darkgreen", angle=90, text=element_text(size=12)) +
geom_text(aes(x=mean.data-1, label="All", y=1.5), colour="black", angle=90, text=element_text(size=12))
return(graph)
}
rent.denplot(greenBuildings_Ideal, "Density Plot of Ideal Green Building's Rent", "Mean of the avergae ideal green building is 30.40")
rent.denplot(nonGreenBuildings_Ideal, "Density Plot of Ideal Non-Green Building's Rent", "Mean of the avergae ideal non-green building is 37.53")
#density plot of green and non green on the same graph -------------------------------FIX
#add mean line of rent from both groups of buildings
plot(density(greenBuildings_Ideal$Rent), col = "darkgreen", xlab = "Rent Per Square Foot",main="Density of Rent Prices for Green and NonGreen Bldgs")
lines(density(nonGreenBuildings_Ideal$Rent),col = "black")
# Box Plot (Green Buildings: Rent) -------------------------------FIX
# put them side by side
boxplot(greenBuildings$Rent, main="Boxplot of Green Building Rent", ylab ="Rent Per Square Foot",
col = "seagreen1",horizontal = TRUE)
boxplot(nonGreenBuildings_Ideal$Rent, main="Boxplot of Non-Green Building Rent", ylab ="Rent Per Square Foot",
col = "turquoise",horizontal = TRUE)
boxplot(greenBuildings_Ideal$Rent, main="Boxplot of Ideal Green Building Rent", ylab ="Rent Per Square Foot",
col = "darkgreen",horizontal = TRUE)
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:10], pch = 19, lower.panel = NULL)
##ESSENTIALLY THE SAME AS A DENSITY PLOT
# Histogram (Green Buildings (Subset): Rent)
hist(greenBuildings_Ideal$Rent)
# Histogram (Non-Green Buildings (Subset): Rent)
hist(nonGreenBuildings_Ideal$Rent)
# Rent Comparison
mean(nonGreenBuildings_Ideal$Rent) - mean(greenBuildings_Ideal$Rent)
library(ggmosaic)
library(ggplot2)
library(varhandle)
library(lubridate)
library(dplyr)
setwd("~/Documents/UT MSBA 2020-21/Summer /PredictiveModeling/Part2_Exercices/STA380Exercises/exercise 2")
# add column for airline
airport <- read.csv("ABIA.csv",header=T, na.strings=c("",NA))
airlinecodes <- read.csv("airline_codes.csv")
abia <- airport %>% left_join(airlinecodes,by="UniqueCarrier")
# replace n/a cells with zero
abia[is.na(abia)] <- 0
abia[abia=='NULL'] <- 0
# recode cancellation code
abia$CancellationCode <- recode(abia$CancellationCode,
"A"="Carrier",
"B"="Weather",
"C"="NAS")
abia$CancellationCode <- factor(abia$CancellationCode,
levels= c("Carrier",
"Weather",
"NAS"))
# recode days of week
abia$DayOfWeek <- recode(abia$DayOfWeek,
"7"="Sunday",
"1"="Monday",
"2"="Tuesday",
"3"="Wednesday",
"4"="Thursday",
"5"="Friday",
"6"="Saturday")
abia$DayOfWeek <- factor(abia$DayOfWeek,
levels= c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
# recode months
abia$MonthName <- recode(abia$Month,
"1"="Jan",
"2"="Feb",
"3"="Mar",
"4"="April",
"5"="May",
"6"="June",
"7"="July",
"8"="Aug",
"9"="Sept",
"10"="Oct",
"11"="Nov",
"12"="Dec")
abia$MonthName <- factor(abia$MonthName,
levels= c("Jan",
"Feb",
"Mar",
"April",
"May",
"June",
"July",
"Aug",
"Sept",
"Oct",
"Nov",
"Dec"))
# create date column
abia$date <- as.Date(with(abia, paste(Year, Month, DayofMonth,sep="-")), "%Y-%m-%d")
# add column for weeknum
abia$weeknum <- isoweek(abia$date)
# set colorblind-friendly palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
View(abia)
# aggregate the data set by more than one factor
d2 = abia  %>% filter(abia$CancellationCode != 0) %>%
group_by(CancellationCode, DayOfWeek) %>%
summarize(numcancels=n()/52)
# plot
ggplot(data = d2) +
geom_bar(mapping = aes(x=DayOfWeek, y=numcancels, fill=CancellationCode),
position="dodge", stat='identity') +
labs(x = "Weekday", fill = "Cancellation Code") +
scale_fill_manual(values=cbPalette) +
theme_bw() +
ggtitle("Average Number of Cancelled Flights by Weekday in 2008") +
# center plot title
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Weekday",y = "Avg # Cancelled Flights")
# aggregate the data set by more than one factor
d12 = abia %>% filter(abia$CancellationCode != 0) %>%
group_by(CancellationCode, MonthName) %>%
summarize(numcancelled=n())
d13 = abia %>%
group_by(MonthName) %>%
summarize(numflights=n(),.groups = 'drop') %>%
ungroup() %>%
arrange(desc(numflights))
combo4 <-merge(x=d12,y=d13,by="MonthName",all.x=TRUE)
combo4$cancperc <- combo4$numcancelled/combo4$numflights
combo4$numcancelled <- NULL
combo4$numflights <- NULL
# plot
ggplot(data = combo4) +
geom_bar(mapping = aes(x=MonthName, y=cancperc, fill=CancellationCode),
position="dodge", stat='identity') +
labs(x = "Month", fill = "Cancellation Code") +
scale_fill_manual(values=cbPalette) +
theme_bw() +
ggtitle("% Flights Cancelled by Month in 2008") +
# center plot title
theme(plot.title = element_text(hjust = 0.5))+
# add labels
labs(x = "2008",y = "% Flights Cancelled")
# group by weeknum, avg delays
d4 = abia %>%
group_by(weeknum) %>%
summarize(avgweatherdelay = mean(WeatherDelay),
avgcarrierdelay = mean(CarrierDelay),
avgNASdelay = mean(NASDelay),
avgsecuritydelay = mean(SecurityDelay),
avgaircraftdelay = mean(LateAircraftDelay))
d4
# set up month breaks in plot
month <- seq(as.Date("2008-01-01"),
as.Date("2008-12-01"),
by = "1 month")
month_numeric <- lubridate::yday(month) / 365 * 52 + 1
month_label <- lubridate::month(month, label = TRUE)
# plot
ggplot() +
# plot individual lines
geom_line(data=d4,aes(y=avgweatherdelay,x= weeknum,color="#CC79A7"))+
geom_line(data=d4,aes(y=avgcarrierdelay,x= weeknum,color="#E69F00"))+
geom_line(data=d4,aes(y=avgNASdelay,x= weeknum,color="#009E73"))+
geom_line(data=d4,aes(y=avgsecuritydelay,x= weeknum,color="#0072B2"))+
geom_line(data=d4,aes(y=avgaircraftdelay,x= weeknum,color="#56B4E9"))+
# add ticks for months
scale_x_continuous(breaks = month_numeric,
labels = month_label) +
# get rid of grey background
theme_bw() +
# add title and center
ggtitle("Average Delay (in min.) by Delay Type in 2008") +
theme(plot.title = element_text(hjust = 0.5)) +
# add labels
labs(x = "2008",y = "Average Delay (min.)") +
# add legend
scale_color_discrete(name = "Delay Type",
labels = c("Security",
"NAS",
"Late Aircraft",
"Weather",
"Carrier"))
d6 = abia %>%
group_by(Airline) %>%
summarize(count=n(),.groups = 'drop') %>%
ungroup() %>%
arrange(desc(count)) %>%
head(n=10)
d7 = abia %>%
filter(Airline %in% d6$Airline) %>%
filter(CancellationCode!= "NA") %>%
group_by(Airline, CancellationCode) %>%
summarize(cancelcount = sum(Cancelled))
combo3 <-merge(x=d7,y=d6,by="Airline",all.x=TRUE)
combo3$cancperc <- combo3$cancelcount/combo3$count
combo3$cancelcount <- NULL
combo3$count <- NULL
ggplot(data = combo3, aes(x = reorder(Airline,desc(cancperc)), y = cancperc, fill = CancellationCode)) +
geom_bar(stat='identity') +
# get rid of grey background
theme_bw() +
# add title and center
ggtitle("% Flights Cancelled for Top 10 Airlines in 2008") +
theme(plot.title = element_text(hjust = 0.5)) +
# add labels
labs(x = "Airline",y = "% Flights Cancelled",fill="Cancellation Code")
d9 = abia %>%
group_by(Airline) %>%
summarize(count=n(),.groups = 'drop') %>%
ungroup() %>%
arrange(desc(count)) %>%
head(n=5)
d9 <- as.data.frame(d9)
# group by weeknum, avg delays
d8 = abia %>%
filter(Airline %in% d9$Airline) %>%
group_by(Airline,weeknum) %>%
summarize(avgcarrdelay = mean(CarrierDelay))
d8
# set up month breaks in plot
month <- seq(as.Date("2008-01-01"),
as.Date("2008-12-01"),
by = "1 month")
month_numeric <- lubridate::yday(month) / 365 * 52 + 1
month_label <- lubridate::month(month, label = TRUE)
# plot
ggplot() +
# plot individual lines
geom_line(data=d8,aes(y=avgcarrdelay,x= weeknum,color=Airline))+
# add ticks for months
scale_x_continuous(breaks = month_numeric,
labels = month_label) +
# get rid of grey background
theme_bw() +
# add title and center
ggtitle("Average Carrier Delay (in min.) for Top 5 Airlines in 2008") +
theme(plot.title = element_text(hjust = 0.5)) +
# add labels
labs(x = "2008",y = "Average Carrier Delay (min.)")
#LINE PLOT MONTH VS AVERAGE ARRIVAL DELAY TIME BY AIRLINE FOR POPULAR AIRLINES -----------------------------DONE
AvgArrDelay <- longARRdelays %>%
group_by(Month, Airline) %>%
summarize(avgArrDelay = mean(ArrDelay, na.rm = TRUE))
library(magrittr)
library("dplyr")
library(ggplot2)
abia_orig <- read.csv('ABIA.csv')
airlinecodes <- read.csv('airline_codes.csv')
abia <- abia_orig %>% left_join(airlinecodes,by="UniqueCarrier")
#MILITARY TIME TO REGULAR AM/PM TIME FORMAT
military.expected <- abia$CRSArrTime
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M ')
military.actual <- abia$ArrTime
abia$ActArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M ')
#QUESTION - what time zone is this in
#length of delay
abia$delaytime <- abia$ActualElapsedTime - abia$CRSElapsedTime
#LINE PLOT MONTH VS AVERAGE ARRIVAL DELAY TIME BY AIRLINE -----------------------------DONE
AvgArrDelay <- abia %>%
group_by(Month, Airline) %>%
summarize(avgArrDelay = mean(ArrDelay, na.rm = TRUE))
#maybe subset for popular airlines
ggplot(AvgArrDelay, aes(x=Month, y=avgArrDelay, group=Airline)) +
geom_line(aes(color=Airline))+
geom_point(aes(color=Airline))
#---------------------------------------------------------------------------------------END
#most popular airlines (above mean)
commonair <- data.frame(count(abia, vars = Airline)) #df of airlines and frequency in abia data frame
airline.counts <- table(abia$Airline) #table of counts similar to commonair
barplot(airline.counts, main="Frequency of Airlines",
xlab="Airline")
airline.mean <- mean(commonair$n) #mean frequency of airlines in abia
x.sub <- commonair %>%
filter(n >= airline.mean) #data frame of list of airlines who's frequency is > median
airlines <- x.sub$vars #list of popular airlines
popular.abia <- subset(abia, Airline %in% airlines) #data frame with info for each flight for popular airlines
#LINE PLOT MONTH VS AVERAGE ARRIVAL DELAY TIME BY AIRLINE FOR POPULAR AIRLINES -----------------------------DONE
AvgArrDelay <- popular.abia %>%
group_by(Month, Airline) %>%
summarize(avgArrDelay = mean(ArrDelay, na.rm = TRUE))
ggplot(AvgArrDelay, aes(x=Month, y=avgArrDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(aes(color=Airline))+
geom_point(aes(color=Airline))+
ggtitle("Average Arrival Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Arrival Delay")
#---------------------------------------------------------------------------------------END
#LINE PLOT MONTH VS AVERAGE DEPARTURE DELAY TIME BY AIRLINE FOR POPULAR AIRLINES -----------------------------DONE
AvgDepDelay <- popular.abia %>%
group_by(Month, Airline) %>%
summarize(avgDepDelay = mean(DepDelay, na.rm = TRUE))
ggplot(AvgDepDelay, aes(x=Month, y=avgDepDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(aes(color=Airline))+
geom_point(aes(color=Airline))+
ggtitle("Average Departure Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Departure Delay")
#---------------------------------------------------------------------------------------END
#Airline with the big peak
#most popular airlines (above median)
expjet <- abia[ which(abia$Airline=='ExpressJet'), ]
#DEPARTURE DELAY------------------------------------------------
eAvgDepDelay <- expjet %>%
group_by(Month, Airline) %>%
summarize(eavgDepDelay = mean(DepDelay, na.rm = TRUE))
ggplot(eAvgDepDelay, aes(x=Month, y=eavgDepDelay, group=Airline))+
geom_line(color="olivedrab4")+
geom_point(color="olivedrab4")+
ggtitle("Average Departure Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Departure Delay")
#ARRIVAL DELAY------------------------------------------------
eAvgArrDelay <- expjet %>%
group_by(Month, Airline) %>%
summarize(eavgArrDelay = mean(ArrDelay, na.rm = TRUE))
ggplot(eAvgArrDelay, aes(x=Month, y=eavgArrDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(color="olivedrab4")+
geom_point(color="olivedrab4")+
ggtitle("Average Arrival Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Arrival Delay")
#---------------------------------------------------------------------------------------END
#FILTER OUT SHORT DELAYS AND MOST POPULAR AIRLINES~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~``
summary(popular.abia$ArrDelay)
m<- mean(popular.abia$ArrDelay, na.rm=TRUE) #exclude NA from calculations
longARRdelays <-popular.abia %>% filter(ArrDelay > m)
summary(abia$DepDelay)
n<- mean(popular.abia$DepDelay, na.rm=TRUE) #exclude NA from calculations
longDEPdelays <-popular.abia %>% filter(DepDelay > n)
#LINE PLOT MONTH VS AVERAGE ARRIVAL DELAY TIME BY AIRLINE FOR POPULAR AIRLINES -----------------------------DONE
AvgArrDelay <- longARRdelays %>%
group_by(Month, Airline) %>%
summarize(avgArrDelay = mean(ArrDelay, na.rm = TRUE))
ggplot(AvgArrDelay, aes(x=Month, y=avgArrDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(aes(color=Airline))+
geom_point(aes(color=Airline))+
ggtitle("Average Arrival Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Arrival Delay")
#---------------------------------------------------------------------------------------END
#LINE PLOT MONTH VS AVERAGE DEPARTURE DELAY TIME BY AIRLINE FOR POPULAR AIRLINES -----------------------------DONE
AvgDepDelay <- longARRdelays %>%
group_by(Month, Airline) %>%
summarize(avgDepDelay = mean(DepDelay, na.rm = TRUE))
ggplot(AvgDepDelay, aes(x=Month, y=avgDepDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(aes(color=Airline))+
geom_point(aes(color=Airline))+
ggtitle("Average Departure Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Departure Delay")
#---------------------------------------------------------------------------------------END
ggplot(AvgDepDelay, aes(x=Month, y=avgDepDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(aes(color=Airline),color="#CC79A7")+
geom_point(aes(color=Airline),color="#E69F00")+
ggtitle("Average Departure Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Departure Delay")
ggplot(AvgDepDelay, aes(x=Month, y=avgDepDelay, group=Airline))+
scale_fill_brewer(palette="Paired") +
geom_line(aes(color=Airline))+
geom_point(aes(color=Airline))+
ggtitle("Average Departure Delay Over Time (Year:2018)") +
xlab("Airline") +
ylab("Average Departure Delay")
# plot
ggplot(data = d2) +
geom_bar(mapping = aes(x=DayOfWeek, y=numcancels, fill=CancellationCode),
position="dodge", stat='identity') +
labs(x = "Weekday", fill = "Cancellation Code") +
scale_fill_manual(values=cbPalette) +
theme_bw() +
ggtitle("Average Number of Cancelled Flights by Weekday in 2008") +
# center plot title
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Weekday",y = "Avg # Cancelled Flights")
# plot
ggplot(data = combo4) +
geom_bar(mapping = aes(x=MonthName, y=cancperc, fill=CancellationCode),
position="dodge", stat='identity') +
labs(x = "Month", fill = "Cancellation Code") +
scale_fill_manual(values=cbPalette) +
theme_bw() +
ggtitle("% Flights Cancelled by Month in 2008") +
# center plot title
theme(plot.title = element_text(hjust = 0.5))+
# add labels
labs(x = "2008",y = "% Flights Cancelled")
