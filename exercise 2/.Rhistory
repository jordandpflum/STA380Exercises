library(mosaic)
library(dplyr)
library(ggplot2)
greenData <- read.csv('greenbuildings.csv')
setwd("~/Documents/UT MSBA 2020-21/Summer /PredictiveModeling/Part2_Exercices/Predictive_Modeling_Exercises_Repo")
greenData <- read.csv('greenbuildings.csv')
# Subset into just green buildings (Green Buildings: Rent)
greenBuildings <- greenData %>% filter(green_rating == 1)
# Subset Green Buildings, ~15 stories (+-5 stories), new (built within last 5 years)
greenBuildings_Ideal <- greenData %>% filter(green_rating == 1,
stories <= 20,
stories >= 10,
age >= 0,
age <= 10,
amenities==1,
cd_total_07>=966)
nonGreenBuildings_Ideal <- greenData %>% filter(green_rating != 1,
stories <= 20,
stories >= 10,
age >= 0,
age <= 10,
amenities==1,
cd_total_07>=966)
nonGreenBuildings_Ideal <- greenData %>% filter(green_rating != 1,
stories <= 20,
stories >= 10,
age >= 0,
age <= 10,
amenities==1,
cd_total_07>=966)
# Histogram (Green Buildings: Rent)-------------------------------DONE
hist(greenBuildings$Rent, 25, xlab = 'Rent Per Square Foot', main = 'Histogram of Rent Prices')
#density plot of one df (parameter 1) with mean line -------------------------------DONE
#Parameter 1: dataframe to use Ex: green_only
#Parameter 2: title of the grpah as a string Ex: "Title"
rent.denplot <- function(df,TITLE){
attach(df)
mean.column = mean(df$Rent)
graph = df %>%
ggplot(aes(x=Rent))+
geom_density(fill="blue",alpha=0.5)+
scale_x_log10()+
geom_vline(xintercept = mean.column,size=1,color="black")+
labs(y="Density", title = TITLE)
return(graph)
}
rent.denplot(greenBuildings_Ideal, "Density Plot of Ideal Green Building's Rent")
rent.denplot(nonGreenBuildings_Ideal, "Density Plot of Ideal Non-Green Building's Rent")
#density plot of green and non green on the same graph -------------------------------DONE
plot(density(greenBuildings_Ideal$Rent), col = "darkgreen", xlab = "Rent Per Square Foot")
#density plot of green and non green on the same graph -------------------------------DONE
plot(density(greenBuildings_Ideal$Rent), col = "darkgreen", xlab = "Rent Per Square Foot")
lines(density(nonGreenBuildings_Ideal$Rent),col = "red")
# Box Plot (Green Buildings: Rent) -------------------------------DONE
boxplot(greenBuildings$Rent, main="Boxplot of Green Building Rent", ylab ="Rent Per Square Foot",
col = "seagreen1",horizontal = TRUE)
boxplot(nonGreenBuildings_Ideal$Rent, main="Boxplot of Non-Green Building Rent", ylab ="Rent Per Square Foot",
col = "turquoise",horizontal = TRUE)
boxplot(greenBuildings_Ideal$Rent, main="Boxplot of Ideal Green Building Rent", ylab ="Rent Per Square Foot",
col = "darkgreen",horizontal = TRUE)
##ESSENTIALLY THE SAME AS A DENSITY PLOT
# Histogram (Green Buildings (Subset): Rent)
hist(greenBuildings_Ideal$Rent)
# Histogram (Non-Green Buildings (Subset): Rent)
hist(nonGreenBuildings_Ideal$Rent)
# Rent Comparison
mean(nonGreenBuildings_Ideal$Rent) - mean(greenBuildings_Ideal$Rent)
View(greenBuildings_Ideal)
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:23], pch = 19, lower.panel = NULL)
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:23], pch = 19, lower.panel = NULL)
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:10], pch = 19, lower.panel = NULL)
my_cols <- c("#00AFBB", "#E7B800", "#FC4E07")
pairs(greenData[,3:10], pch = 19,  cex = 0.5,
col = my_cols[greenData$green_rating],
lower.panel=NULL)
pairs(greenData[,3:10], pch = 19,  cex = 0.5,
col = my_cols[greenData$cluster],
lower.panel=NULL)
View(greenData)
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:10], pch = 19, lower.panel = NULL)
rent.denplot(greenBuildings_Ideal, "Density Plot of Ideal Green Building's Rent")
#density plot of green and non green on the same graph -------------------------------DONE
plot(density(greenBuildings_Ideal$Rent), col = "darkgreen", xlab = "Rent Per Square Foot")
lines(density(nonGreenBuildings_Ideal$Rent),col = "red")
# Box Plot (Green Buildings: Rent) -------------------------------DONE
boxplot(greenBuildings$Rent, main="Boxplot of Green Building Rent", ylab ="Rent Per Square Foot",
col = "seagreen1",horizontal = TRUE)
boxplot(nonGreenBuildings_Ideal$Rent, main="Boxplot of Non-Green Building Rent", ylab ="Rent Per Square Foot",
col = "turquoise",horizontal = TRUE)
boxplot(greenBuildings_Ideal$Rent, main="Boxplot of Ideal Green Building Rent", ylab ="Rent Per Square Foot",
col = "darkgreen",horizontal = TRUE)
# Scatter plot matrix
pairs(greenBuildings_Ideal[,3:10], pch = 19, lower.panel = NULL)
setwd("~/Documents/UT MSBA 2020-21/Summer /PredictiveModeling/Part2_Exercices/STA380Exercises/exercise 2")
setwd("~/Documents/UT MSBA 2020-21/Summer /PredictiveModeling/Part2_Exercices/STA380Exercises/Data")
abia <- read.csv('ABIA')
abia <- read.csv('ABIA')
setwd("~/Documents/UT MSBA 2020-21/Summer /PredictiveModeling/Part2_Exercices/STA380Exercises/exercise 2")
abia <- read.csv('ABIA')
abia <- read.csv('ABIA.csv')
View(abia)
#line plot month vs count of delayed
#plot avg delay time per month per airline
military.expected <- abia$CRSArrTime
format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')
military.actual <- abia$ArrTime
abia$ActArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')
#QUESTION - what time zone is this in
#length of delay
abia$arrival.delay <- difftime(abia$ExpArrTime, abia$ActArrTime)
#QUESTION - what time zone is this in
#length of delay
time1<- abia$ExpArrTime
time2<- abia$ActArrTime
abia$arrival.delay <- difftime(time1, time2)
abia$arrival.delay <- difftime(time2, time1, units="mins")
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'))
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')
abia$arrival.delay <- difftime(time1, time2)
abia$arrival.delay <- difftime(time2, time1, units="mins")
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M ')
military.actual <- abia$ArrTime
abia$ExpArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M ')
military.actual <- abia$ArrTime
abia$ActArrTime <- format(strptime(substr(as.POSIXct(sprintf("%04.0f", military.expected),
format="%H%M"), 12, 16), '%H:%M'), '%I:%M ')
#QUESTION - what time zone is this in
#length of delay
time1<- abia$ExpArrTime
time2<- abia$ActArrTime
abia$arrival.delay <- difftime(time1, time2)
abia$arrival.delay <- difftime(time2, time1, units="mins")
myMtime <- sprintf("%04d", time1)
abia$arrival.delay <- difftime(time2, time1, units="mins")
#QUESTION - what time zone is this in
#length of delay
abia$delaytime <- abia$ActualElapsedTime - abia$CRSElapsedTime
abia %>%
group_by(Month, UniqueCarrier) %>%
summarize(mean_size = mean(ArrDelay, na.rm = TRUE))
install.packages("magrittr")
library(magrittr)
abia %>%
group_by(Month, UniqueCarrier) %>%
summarize(mean_size = mean(ArrDelay, na.rm = TRUE))
library("dplyr")
abia %>%
group_by(Month, UniqueCarrier) %>%
summarize(mean_size = mean(ArrDelay, na.rm = TRUE))
abia %>%
group_by(Month, UniqueCarrier) %>%
summarize(AvgArrDelay = mean(ArrDelay, na.rm = TRUE))
AvgArrDelay <- abia %>%
group_by(Month, UniqueCarrier) %>%
summarize(AvgArrDelay = mean(ArrDelay, na.rm = TRUE))
AvgArrDelay <- abia %>%
group_by(Month, UniqueCarrier) %>%
summarize(avgArrDelay = mean(ArrDelay, na.rm = TRUE))
ggplot(data=AvgArrDelay, aes(x=Month, y=avgArrDelay, group=UniqueCarrier)) +
geom_line()+
geom_point()
library(ggplot2)
ggplot(data=AvgArrDelay, aes(x=Month, y=avgArrDelay, group=UniqueCarrier)) +
geom_line()+
geom_point()
ggplot(AvgArrDelay, aes(x=Month, y=AvgArrDelay, group=UniqueCarrier)) +
geom_line(aes(linetype=UniqueCarrier))+
geom_point()
ggplot(AvgArrDelay, aes(x=Month, y=avgArrDelay, group=UniqueCarrier)) +
geom_line(aes(color=UniqueCarrier))+
geom_point(aes(color=UniqueCarrier))
ggplot(data=AvgArrDelay, aes(x=Month, y=avgArrDelay, group=UniqueCarrier)) +
geom_line()+
geom_point()
#most popular airlines
count(abia, vars = UniqueCarrier)
#most popular airlines
order(count(abia, vars = UniqueCarrier))
#most popular airlines
count(abia, vars = UniqueCarrier)
#most popular airlines
which(count(abia, vars = UniqueCarrier)> 1000)
#most popular airlines
count(abia, vars = UniqueCarrier)
#most popular airlines
hist(count(abia, vars = UniqueCarrier))
#most popular airlines
barchart(count(abia, vars = UniqueCarrier))
#most popular airlines
bar(count(abia, vars = UniqueCarrier))
#most popular airlines
barplot(count(abia, vars = UniqueCarrier))
#maybe subset for popular airlines
ggplot(AvgArrDelay, aes(x=Month, y=avgArrDelay, group=UniqueCarrier)) +
geom_line(aes(color=UniqueCarrier))+
geom_point(aes(color=UniqueCarrier))
#maybe subset for popular airlines
ggplot(AvgArrDelay, aes(x=Month, y=avgArrDelay, group=UniqueCarrier)) +
geom_line(aes(color=UniqueCarrier))+
geom_point(aes(color=UniqueCarrier))
